version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: task-api-nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  php:
    build:
      context: ./docker/php
    container_name: task-api-php
    volumes:
      - ./:/var/www
    depends_on:
      - postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3

  php-test:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.test
    container_name: task-api-php-test
    volumes:
      - ./:/var/www
    networks:
      - app-network
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1

  postgres:
    image: postgres:13
    container_name: task-api-postgres
    environment:
      POSTGRES_DB: task_db
      POSTGRES_USER: task_user
      POSTGRES_PASSWORD: task_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U task_user -d task_db"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 